<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

<security:http auto-config="true">
   <security:form-login login-page="/login.htm"
                        authentication-failure-url="/login.htm?error"
                        default-target-url="/main.htm"/>
   <security:logout logout-success-url="/main.htm"/>
   <!-- pattern 매핑 방법 
        pattern="/customer/*" access="ROLE_USER"   =customer 폴더 안에 모든 파일
        pattern="/customer/**" access="ROLE_USER"  =customer 폴더 안에 하위 폴더를 포함한 하위 자원
   
   -->
   <security:intercept-url pattern="/main/*" access="ROLE_USER, ROLE_ADMIN"/>
   <security:intercept-url pattern="/board/*" access="ROLE_USER"/>
   <security:intercept-url pattern="/concert/*" access="ROLE_USER"/>
   <security:intercept-url pattern="/music/*" access="ROLE_USER"/>
   <security:intercept-url pattern="/account/*" access="ROLE_USER"/>
   <security:intercept-url pattern="/setting/*" access="ROLE_ADMIN"/>
  
</security:http>

<security:authentication-manager>
   <security:authentication-provider>
      <!-- JDBC 사용해서 DB연동 인증 처리  -->
      <security:jdbc-user-service data-source-ref="dataSource"
         users-by-username-query="SELECT userid USERID, upwd PASSWORD, ENABLED FROM usert where userid=?"
         authorities-by-username-query="SELECT userid USERID, ROLE_NAME FROM usert where userid=? "     
      /> 
   
   </security:authentication-provider>
</security:authentication-manager>

</beans>
