<?xml version="1.0" encoding="UTF-8"?>
<!-- <beans:beans
xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns="http://www.springframework.org/schema/security"
xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		            http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

<security:http auto-config="true">
   <security:form-login login-page="/login/login.htm"
                        authentication-failure-url="/login/login.htm?error"
                        default-target-url="/main/main.htm"/>
   <security:logout logout-success-url="/main/main.htm"/>
   <!-- pattern 매핑 방법 
        pattern="/customer/*" access="ROLE_USER"   =customer 폴더 안에 모든 파일
        pattern="/customer/**" access="ROLE_USER"  =customer 폴더 안에 하위 폴더를 포함한 하위 자원
   
   -->
   <security:intercept-url pattern="/board/*" access="ROLE_USER"/>
   <security:intercept-url pattern="/concert/*" access="ROLE_USER"/>
   <security:intercept-url pattern="/music/*" access="ROLE_USER"/>
   <security:intercept-url pattern="/account/*" access="ROLE_USER"/>
   <security:intercept-url pattern="/setting/*" access="ROLE_ADMIN"/>
  
</security:http>

<security:authentication-manager>
   <security:authentication-provider>
      <!-- JDBC 사용해서 DB연동 인증 처리  -->
      <security:jdbc-user-service data-source-ref="dataSource"
         users-by-username-query="SELECT id userid, pwd upwd, 1 ENABLED FROM usert where id=?"
         authorities-by-username-query="SELECT ID userid, 'ROLE_USER' ROLE_NAME FROM usert where id=? "
      />
      
      <!-- 
           security:jdbc-user-service <- 얘는 USERID, PASSWORD, ENABLED//USERID, ROLE_NAME 만 넘겨주면 인증 시스템을 하겠다
      
                 기본: 사용자는 하나의 롤을 가진다
           JDBC 사용해서 DB연동 하려면 몇가지 규칙이 있다
           1.규칙 (사용자 정보)
                 아래의 컬럼명은 정의되어 있는 것을 사용  
           SELECT USERID, PASSWORD, ENABLED FROM...
           -> 실제 테이블 컬럼 은 select userid, password...from...
                 해결방안 
            ->SELECT id USERID, pwd PASSWORD, 1 ENABLED FROM tmember
                                             //활성화된 사용자
           2.규칙 (역할 정보)
           SELECT USERID, ROLE_NAME FROM ...  
           -> select TMEMBER.ROLEID, TROLE.ROLE_NAME from tmember inner join trole 
              on tmember.roleid = trole.roleid
              where tmember.id = 'song'  
                 해결방안
            ->SELECT ID USERID, 'ROLE_USER' ROLE_NAME FROM TMEMBER where id=?              
      -->
      
      
   </security:authentication-provider>
</security:authentication-manager>

</beans>
